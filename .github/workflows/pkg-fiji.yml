name: package pointmark into FIJI

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build_jar:
    name: package pointmark into FIJI
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        fiji_target: [linux64, win64, macosx]
    steps:
      - name: Checkout repo
        id: checkout_repo
        uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags

      - name: List all tags
        run: git tag

      - name: Setup JDK
        uses: actions/setup-java@v4
        id: jdk_setup
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Build JAR
        run: bash ./.github/scripts/build-jar.sh

      - name: Copy plugins and macros
        run: bash ./.github/scripts/collect-jars.sh

      - name: Package for ${{ matrix.fiji_target }}
        run: bash ./.github/scripts/pkg-${{ matrix.fiji_target }}.sh

      - name: Check if tag exists
        id: check_tag
        run: |
          TAG_NAME="v${GITHUB_RUN_NUMBER}"
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create and push tag if it doesn't exist
        if: env.TAG_EXISTS == 'false'
        run: |
          TAG_NAME="v${GITHUB_RUN_NUMBER}"
          git tag $TAG_NAME
          git push origin $TAG_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release if tag doesn't exist
        if: env.TAG_EXISTS == 'false'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${GITHUB_RUN_NUMBER}"
          release_name: Release v${GITHUB_RUN_NUMBER}
          body: |
            Changes in this release:
            - None for now, testing workflow
          prerelease: true

      - name: Upload release ZIP
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: fiji-${{ matrix.fiji_target }}.zip
          asset_name: fiji-${{ matrix.fiji_target }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
