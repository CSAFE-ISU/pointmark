name: Releases
on:
    push:
      # Sequence of patterns matched against refs/tags
        branches:
            - main
      # tags:
      #  - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
  # name: Create Release

# jobs:
#     changelog:
#         runs-on: ubuntu-latest

#         steps:  
#             - uses: actions/checkout@v2

#             - name: Create release
#               id: changelog
#               uses: TriPSs/conventional-changelog-action@v3.7.1
#               with:
#                   github-token: ${{ secrets.CHANGELOG_RELEASE }}

#             - name: create release
#               uses: actions/create-release@v1
#               if: ${{ steps.changelog.outputs.skipped == 'false' }}
#               env:
#                 GITHUB_TOKEN: ${{ secrets.CHANGELOG_RELEASE }}
#               with:
#                 tag_name: ${{ steps.changelog.outputs.tag }}
#                 release_name: ${{ steps.changelog.outputs.tag }}
#                 body: ${{ steps.changelog.outputs.clean.changelog }}

jobs:
    release_pointmark:
        name: Release Pointmark
        runs-on: ubuntu-latest
        steps:  
            - name: Checkout Code
              uses: actions/checkout@v2

              id: release_pointmark
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}

            - name: Create Release
              uses: actions/create-release@v1
              id: create_release
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: ${{ github.run_number }}
                release_name: ${{ github.run_number }}
                body: |
                    Changes in this Release:
                    - First Change
                    - Second Change
            - name: Upload Release Asset
              id: upload-release-asset 
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ steps.release_pointmark.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
                asset_path: ./my-artifact.zip
                asset_name: my-artifact.zip
                asset_content_type: application/zip

# build:
#     name: Create Release
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout code
#         uses: actions/checkout@v2
#     - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#         with:
#         tag_name: ${{ github.ref }}
#         release_name: Release ${{ github.ref }}
#         body: |
#             Changes in this Release
#             - First Change
#             - Second Change
#         draft: false
#         prerelease: false